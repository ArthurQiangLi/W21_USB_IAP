/**
  ******************************************************************************
  * @file    bsp_io.h
  * @author  SeanLi
  * @version 
  * @date    11-January-2018
  * @brief   
  *
  *                      
  ******************************************************************************
  * @attention
  *
  *
  ******************************************************************************
  */

  
/*******************************************************************************
********************* Define to prevent recursive inclusion ********************
*******************************************************************************/
#ifndef _BSP_IO_H
#define _BSP_IO_H

/*******************************************************************************
************************************ Includes **********************************
*******************************************************************************/

#include "bsp_int.h"

/*******************************************************************************
********************************* Exported macro *******************************
*******************************************************************************/

/*******************************************************************************
********************************* Exported types *******************************
*******************************************************************************/

/*******************************************************************************
  * @brief  input
  *****************************************************************************/
typedef enum
{ 
	BSP_IN_KEY = 0,
	
	BSP_IN_NUM
	
}bsp_io_in_t;

/*******************************************************************************
  * @brief  output
  *****************************************************************************/
typedef enum
{ 
	BSP_OUT_PWR_ALL   = 0,
	
	BSP_OUT_NUM
	
}bsp_io_out_t;

//---------------------------
//未使用 bk:内存备份
typedef struct 
{
	bsp_u16 pwr_all		:1;
    
}bsp_io_out_bk_t;

/*******************************************************************************
  * @brief  led
  *****************************************************************************/
typedef enum
{ 
	BSP_LED_RED   = 0,
	BSP_LED_GREEN,
	
	BSP_LED_NUM
	
}bsp_io_led_t;

typedef enum
{ 
	BSP_LED_OFF   = 0,
	BSP_LED_ON,
	BSP_LED_TOG
	
}bsp_io_led_status_t;


/*******************************************************************************
  * @brief  adc
  *****************************************************************************/
typedef enum
{ 
	BSP_ADC_CH1 = 0,
	BSP_ADC_CH2,
	
	BSP_ADC_NUM
	
}bsp_io_adc_ch_t;

typedef struct
{ 
	bsp_io_adc_ch_t	channel;
	bsp_u16			value_adc[BSP_ADC_NUM];
	bsp_u16			value_vol[BSP_ADC_NUM];
	bsp_u16			buffer[16];
	
	void 			(*op_delay) (bsp_u32 n);
	
}bsp_io_adc_t;

/*******************************************************************************
  * @brief  dac
  *****************************************************************************/
typedef enum
{ 
	BSP_DAC_CH1 = 0,
	BSP_DAC_CH2,
	
	BSP_DAC_NUM
	
}bsp_io_dac_t;


/*******************************************************************************
******************************* Exported constants *****************************
*******************************************************************************/

/*******************************************************************************
******************************* Exported functions *****************************
*******************************************************************************/

bsp_bit bsp_io_in_level_rd(bsp_io_in_t num);
void 	bsp_io_out_wr(bsp_io_out_t num, bsp_bit level);
void 	bsp_io_led_wr(bsp_io_led_t led, bsp_io_led_status_t status);

bsp_u16 bsp_io_adc_rd(void);
void 	bsp_io_adc_cfg(bsp_io_adc_ch_t ch);
void 	bsp_io_adc_poll(bsp_io_adc_t *adc);
void 	bsp_io_dac_wr(bsp_io_dac_t ch, bsp_u16 value);

void 	bsp_io_init(void);


#endif /* _BSP_IO_H */

/********************************* end of file ********************************/
